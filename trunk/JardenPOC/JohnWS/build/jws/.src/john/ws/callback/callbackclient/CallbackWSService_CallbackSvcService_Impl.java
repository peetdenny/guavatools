package john.ws.callback.callbackclient;

/**
 * Generated class, do not edit.
 *
 * This service class was generated by weblogic
 * webservice stub gen on Tue Aug 14 12:21:25 BST 2007 */

public class CallbackWSService_CallbackSvcService_Impl     extends weblogic.wsee.jaxrpc.ServiceImpl
     implements john.ws.callback.callbackclient.CallbackWSService_CallbackSvcService {

  public CallbackWSService_CallbackSvcService_Impl() throws javax.xml.rpc.ServiceException {
    this("john/ws/callback/callbackclient/CallbackWSService_CallbackSvcService_saved_wsdl.wsdl", null);
  }
  
  public CallbackWSService_CallbackSvcService_Impl(String wsdlurl) throws javax.xml.rpc.ServiceException {
    this(wsdlurl, null);
  }
  
  public CallbackWSService_CallbackSvcService_Impl(String wsdlurl, weblogic.wsee.connection.transport.TransportInfo transportInfo) throws javax.xml.rpc.ServiceException {
    super(wsdlurl,
          new javax.xml.namespace.QName("http://john/ws/callback", "CallbackWSService_CallbackSvcService"),
          "john/ws/callback/callbackclient/CallbackWSService_CallbackSvcService_internaldd.xml", transportInfo);
  }
  
  //***********************************
  // Port Name: CallbackWSSoapPortCallback 
  // Port Type: CallbackWSService_CallbackSvc 
  //***********************************

  john.ws.callback.callbackclient.CallbackWSService_CallbackSvc mvar_CallbackWSSoapPortCallback;

  /**
   * returns CallbackWSSoapPortCallback port in this service 
   */
  public john.ws.callback.callbackclient.CallbackWSService_CallbackSvc getCallbackWSSoapPortCallback() 
    throws javax.xml.rpc.ServiceException
  {

    if (mvar_CallbackWSSoapPortCallback == null) {
      mvar_CallbackWSSoapPortCallback =
        new john.ws.callback.callbackclient.CallbackWSService_CallbackSvc_Stub(_getPort("CallbackWSSoapPortCallback"), this);
    }

    if (transportInfo != null && 
        transportInfo instanceof weblogic.wsee.connection.transport.http.HttpTransportInfo) {
      ((javax.xml.rpc.Stub)mvar_CallbackWSSoapPortCallback)._setProperty(
        "weblogic.wsee.connection.transportinfo", 
        (weblogic.wsee.connection.transport.http.HttpTransportInfo)transportInfo);
    }
    
    return mvar_CallbackWSSoapPortCallback;
  }

  /**
   * @deprecated  Use getCallbackWSSoapPortCallback(byte[] username, byte[] password)
   */
  public john.ws.callback.callbackclient.CallbackWSService_CallbackSvc getCallbackWSSoapPortCallback(String username, String password) 
    throws javax.xml.rpc.ServiceException
  {
    if (username != null & password != null) {
      weblogic.wsee.connection.transport.http.HttpTransportInfo httpInfo = 
        new weblogic.wsee.connection.transport.http.HttpTransportInfo();
      httpInfo.setUsername(username.getBytes());
      httpInfo.setPassword(password.getBytes());
      transportInfo = httpInfo;
    }
    return getCallbackWSSoapPortCallback();
  }

  public john.ws.callback.callbackclient.CallbackWSService_CallbackSvc getCallbackWSSoapPortCallback(byte[] username, byte[] password) 
    throws javax.xml.rpc.ServiceException
  {
    if (username != null & password != null) {
      weblogic.wsee.connection.transport.http.HttpTransportInfo httpInfo = 
        new weblogic.wsee.connection.transport.http.HttpTransportInfo();
      httpInfo.setUsername(username);
      httpInfo.setPassword(password);
      transportInfo = httpInfo;
    }
    return getCallbackWSSoapPortCallback();
  }
  
  
}